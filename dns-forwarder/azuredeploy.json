{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location":{
            "type": "string",
            "metadata": {
                "description": "The location of the virtual network and DNS forwarders must be identical."
            }
        },
        "virtualNetworkResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The resource group of the virtual network that needs a DNS forwarder."
            }
        },
        "virtualNetworkName": { 
            "type": "string",
            "metadata": {
                "description": "The virtual network to add the DNS forwarder to."
            }
        },
        "virtualNetworkSubnetName":{
            "type": "string",
            "metadata": {
                "description": "The specific subnet to use."
            }
        },
        "dnsForwarderRootName": {
            "type": "string",
            "defaultValue": "DnsForwarder",
            "metadata": {
                "description": "The name of the DNS VM."
            }
        },
        "dnsForwarderTempPassword": {
            "type": "securestring",
            "metadata": {
                "description": "A temporary password for the DNS VMs to use until they are domain joined."
            }
        },
        "domainJoin": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Whether or not to domain join the DNS forwarder VMs. The default value is yes, meaning odjBlob1 and odjBlob2 are required."
            }
        },
        "odjBlob1": {
            "type": "securestring",
            "metadata": {
                "description": "The offline domain join blob for the DNS forwarder #1."
            }
        },
        "odjBlob2": {
            "type": "securestring",
            "metadata": {
                "description": "The offline domain join blob for the DNS forwarder #2."
            }
        },
        "domainName": {
            "type": "string",
            "metadata": {
                "description": "The domain name of the (presumably) on-premises AD."
            }
        },
        "onPremDnsServers": {
            "type": "array",
            "metadata": {
                "description": "The on-premises DNS servers serving the domain."
            }
        }
    },
    "variables": {
        "vmTempUsername": "tempUser",
        "vmSkuName": "2019-Datacenter-Core",
        "vmSize": "Standard_DS1_v2",
        "azurePrivateDnsIpAddress": "168.63.129.16",
        "storageEndpoint": "[environment().suffixes.storage]",
        "scriptURL": "https://raw.githubusercontent.com/wmgries/azure-files-samples/dns-forwarder/dns-forwarder/configureVM.ps1",
        "scriptName": "configureVM.ps1"
    },
    "functions": [
        {
            "namespace": "ps",
            "members": {
                "paramSwitch": {
                    "parameters": [
                        {
                            "name": "paramName",
                            "type": "string"
                        },
                        {
                            "name": "boolValue",
                            "type": "bool"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat(' -', parameters('paramName'), if(not(parameters('boolValue')), ':$false', ''))]"
                    }
                },
                "paramBool": {
                    "parameters": [
                        {
                            "name": "paramName",
                            "type": "string"
                        },
                        {
                            "name": "boolValue",
                            "type": "bool"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat(' -', parameters('paramName'), ' $', string(parameters('boolValue')))]"
                    }
                },
                "paramString": {
                    "parameters": [
                        {
                            "name": "paramName",
                            "type": "string"
                        },
                        {
                            "name": "strValue",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat(' -', parameters('paramName'), ' ''', parameters('strValue'), '''')]"
                    }
                },
                "paramInt": {
                    "parameters": [
                        {
                            "name": "paramName",
                            "type": "string"
                        },
                        {
                            "name": "intValue",
                            "type": "int"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat(' -', parameters('paramName'), ' ', parameters('intValue'))]"
                    }
                },
                "paramStringArray": {                    
                    "parameters": [
                        {
                            "name": "paramName",
                            "type": "string"
                        },
                        {
                            "name": "strArrValue",
                            "type": "array"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat(' -', parameters('paramName'), ' @', replace(replace(replace(string(parameters('strArrValue')), '[', '('), ']', ')'), '\"', ''''))]"
                    }
                },
                "paramIntArray": {
                    "parameters": [
                        {
                            "name": "paramName",
                            "type": "string"
                        },
                        {
                            "name": "intArrValue",
                            "type": "array"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat(' -', parameters('paramName'), ' @', replace(replace(string(parameters('intArrValue')), '[', '('), ']', ')'))]"
                    }
                },
                "scriptStart": {
                    "parameters": [
                        {
                            "name": "scriptName",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat('powershell.exe', ' -Command \"./', parameters('scriptName'))]"
                    }
                },
                "scriptEnd": {
                    "parameters": [],
                    "output": {
                        "type": "string",
                        "value": "\""
                    }
                }
            }
        }
    ],
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2019-03-01",
            "name": "[concat(parameters('dnsForwarderRootName'), '-AvailabilitySet')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties":{
                "platformUpdateDomainCount": 5,
                "platformFaultDomainCount": 2,
                "virtualMachines": [
                    { 
                        "id": "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('dnsForwarderRootName'), '-1'))]" 
                    },
                    {
                        "id": "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('dnsForwarderRootName'), '-2'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[concat(parameters('dnsForwarderRootName'), '-1')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', concat(parameters('dnsForwarderRootName'), '-AvailabilitySet'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('dnsForwarderRootName'), '-1-NIC'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(parameters('dnsForwarderRootName'), '-AvailabilitySet'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[variables('vmSkuName')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('dnsForwarderRootName'), '-1-OsDisk')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[concat(parameters('dnsForwarderRootName'), '-1')]",
                    "adminUsername": "[variables('vmTempUsername')]",
                    "adminPassword": "[parameters('dnsForwarderTempPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [{
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('dnsForwarderRootName'), '-1-NIC'))]"
                    }]
                },
                "licenseType": "Windows_Server"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[concat(parameters('dnsForwarderRootName'), '-2')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', concat(parameters('dnsForwarderRootName'), '-AvailabilitySet'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('dnsForwarderRootName'), '-2-NIC'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(parameters('dnsForwarderRootName'), '-AvailabilitySet'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[variables('vmSkuName')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('dnsForwarderRootName'), '-2-OsDisk')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[concat(parameters('dnsForwarderRootName'), '-2')]",
                    "adminUsername": "[variables('vmTempUsername')]",
                    "adminPassword": "[parameters('dnsForwarderTempPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [{
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('dnsForwarderRootName'), '-2-NIC'))]"
                    }]
                },
                "licenseType": "Windows_Server"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('dnsForwarderRootName'), '-1-NIC')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [{
                    "name": "defaultIpConfig",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "subnet": {
                            "id": "[concat(resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/', parameters('virtualNetworkSubnetName'))]"
                        },
                        "primary": true,
                        "privateIPAddressVersion": "IPv4"
                    }
                }],
                "dnsSettings": { "dnsServers": [] },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('dnsForwarderRootName'), '-2-NIC')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [{
                    "name": "defaultIpConfig",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "subnet": {
                            "id": "[concat(resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/', parameters('virtualNetworkSubnetName'))]"
                        },
                        "primary": true,
                        "privateIPAddressVersion": "IPv4"
                    }
                }],
                "dnsSettings": { "dnsServers": [] },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('dnsForwarderRootName'), '-1/setupscript')]",
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('dnsForwarderRootName'), '-1'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [ "[variables('scriptURL')]" ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat(ps.scriptStart(variables('scriptName')), ps.paramSwitch('DomainJoin', parameters('domainJoin')), ps.paramString('DomainName', parameters('domainName')), ps.paramString('OdjBlob', parameters('odjBlob1')), ps.paramStringArray('OnPremDnsServers', parameters('onPremDnsServers')), ps.paramString('StorageEndpoint', variables('storageEndpoint')), ps.paramString('PrivateDnsIp', variables('azurePrivateDnsIpAddress')), ps.paramString('TempUser', variables('vmTempUsername')), ps.scriptEnd())]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('dnsForwarderRootName'), '-2/setupscript')]",
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('dnsForwarderRootName'), '-2'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [ "[variables('scriptURL')]" ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat(ps.scriptStart(variables('scriptName')), ps.paramSwitch('DomainJoin', parameters('domainJoin')), ps.paramString('DomainName', parameters('domainName')), ps.paramString('OdjBlob', parameters('odjBlob2')), ps.paramStringArray('OnPremDnsServers', parameters('onPremDnsServers')), ps.paramString('StorageEndpoint', variables('storageEndpoint')), ps.paramString('PrivateDnsIp', variables('azurePrivateDnsIpAddress')), ps.paramString('TempUser', variables('vmTempUsername')), ps.scriptEnd())]"
                }
            }
        }
    ],
    "outputs": {
        "storageEndpoint": {
            "type": "string",
            "value": "[variables('storageEndpoint')]"
        },
        "dnsForwarder1-PrivateIP": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('dnsForwarderRootName'), '-1-NIC'))).ipConfigurations[0].properties.privateIPAddress]"
        }, 
        "dnsForwarder2-PrivateIP": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('dnsForwarderRootName'), '-2-NIC'))).ipConfigurations[0].properties.privateIPAddress]"
        }
    }
}